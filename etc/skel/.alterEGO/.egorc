#!/usr/bin/env sh
#                                                                           
# ~/.alterEGO/.egorc                                                        
#   created     : 2021-03-19 09:37:19 UTC                                   
#   updated     : 2022-09-25 14:13:25 UTC
#   description : alterEGO Linux core shell configuration.                  
# ___________________________ { alterEGO Linux: "Open the vault of knowledge" }

  # [ -f ${HOME}/.alterEGO/egoSHlib/message.bash ]                              \
  # && . ${HOME}/.alterEGO/egoSHlib/message.bash

  [ -f ${HOME}/.alterEGO/bash-ael/message.bash ]                              \
  && . ${HOME}/.alterEGO/bash-ael/message.bash

  [ -f ${HOME}/.alterEGO/.functions ]                                         \
  && . ${HOME}/.alterEGO/.functions

  [ -f ${HOME}/.alterEGO/.containers ]                                        \
  && . ${HOME}/.alterEGO/.containers

  [ -f ${HOME}/.alterEGO/.extrarc ]                                           \
  && . ${HOME}/.alterEGO/.extrarc

  [ -f ${HOME}/.alterEGO/.tryhackme ]                                         \
  && . ${HOME}/.alterEGO/.tryhackme

  [ -f ${HOME}/.alterEGO/.testrc ]                                            \
  && . ${HOME}/.alterEGO/.testrc

## [ COLORS ] -------------------------------------------------------------- ##

  export TERM="xterm-256color"

  export COLOR_BLUE="\033[34m"
  export COLOR_BOLD="\033[1m"
  export COLOR_GREEN="\033[32m"
  export COLOR_RED="\033[31m"
  export COLOR_RESET="\033[0m"

## [ ALIAS ] --------------------------------------------------------------- ##

  alias grep="grep --color=auto"
  alias ll='ls --all --human-readable -l --color=auto'
  alias ls='ls --all --color=auto'

  ## Makes tmux understand the environment is important.
  alias tmux="env TERM=screen-256color tmux -u"

  alias msfconsole='msfconsole -x "db_connect ${USER}@msf"'
  alias open="ael-open"
  alias attack="source ${HOME}/.alterEGO/.tryhackme"

## [ DEFAULT APPLICATIONS ] ------------------------------------------------ ##

  export BROWSER=firefox
  export FZF_DEFAULT_COMMAND='rg --files --hidden '
  export TERMINAL="xfce4-terminal --hide-scrollbar --hide-menubar --hide-toolbar"
  export VISUAL=vim
  export EDITOR=${VISUAL}

## [ PATH ] ---------------------------------------------------------------- ##

  ## ref. https://www.linuxjournal.com/content/removing-duplicate-path-entries

  PATH="${PATH}:${HOME}/scripts:${HOME}/bin"
  PATH=$(printf '%s' "${PATH}" | awk -v RS=: '!($0 in a) {a[$0]; printf("%s%s", length(a) > 1 ? ":" : "", $0)}')

  export PATH

## [ HISTORY ] ------------------------------------------------------------- ##

  export HISTIGNORE="cd:clear:delete:exit:gitall:history:ls:mv:nohup:vim"
  export HISTCONTROL=ignoreboth:erasedups
  export HISTSIZE=1000000
  export HISEFILESIZE=1000000
  # export HISTTIMEFORMAT="%Y-%m-%d %T %z "

## [ MAN IN COLOR ] -------------------------------------------------------- ##

  ##### TODO Need to work on the colors.
  export LESS_TERMCAP_mb=$(printf '\e[01;31m') # enter blinking mode – red
  export LESS_TERMCAP_md=$(printf '\e[01;35m') # enter double-bright mode – bold, magenta
  export LESS_TERMCAP_me=$(printf '\e[0m')     # turn off all appearance modes (mb, md, so, us)
  export LESS_TERMCAP_se=$(printf '\e[0m')     # leave standout mode
  export LESS_TERMCAP_so=$(printf '\e[01;33m') # enter standout mode – yellow
  export LESS_TERMCAP_ue=$(printf '\e[0m')     # leave underline mode
  export LESS_TERMCAP_us=$(printf '\e[04;36m') # enter underline mode – cyan

## [ VIM ] ----------------------------------------------------------------- ##

  ## Enable CTRL+s in vim.
  ## ref. https://stackoverflow.com/questions/3446320/in-vim-how-to-map-save-to-ctrl-s
  ## Requires mapping in .vimrc:
  ## inoremap <C-s> <ESC>:write<CR>

  stty -ixon

## [ QT5 ] ----------------------------------------------------------------- ##

  ## ref. https://wiki.manjaro.org/index.php/Set_all_Qt_app%27s_to_use_GTK%2B_font_%26_theme_settings
  ## Set all Qt app's to use GTK+ font & theme settings
  ## Overview
  ## When using a Desktop Environment or Window Manager that doesn't allow for the settings of QT themes,
  ## you can set QT to use your GTK themes instead.
  ## Using qt5ct
  ## note: In some Manjaro editions, this is already done for you by default
  ## Install qt5ct using your favorite package manager or the command:
  ## pamac install qt5ct
  ## Set environment variables in ~/.profile by adding or updating the following lines:
  ## export QT_QPA_PLATFORMTHEME="qt5ct"
  ## Run the application QT5 Configuration Manager from the menu or run the command qt5ct.
  ## Logout and login again to make the change effective

  # export QT_QPA_PLATFORMTHEME="qt5ct"

## [ WORDLISTS ] ----------------------------------------------------------- ##

  export WORDLISTS="/usr/local/share/wordlists"
  export WL_BEST1050="${WORDLISTS}/best1050.txt"
  export WL_BIG="${WORDLISTS}/seclist-big.txt"
  export WL_DIRMEDIUM="${WORDLISTS}/directory-list-2.3-medium.txt"
  export WL_LARGEFILES="${WORDLISTS}/raft-large-files.txt"
  export WL_ROCKYOU="${WORDLISTS}/rockyou.txt"
  export WL_XPLATFORM="${WORDLISTS}/xplatform.txt"

## [ REVERSE SHELLS ] ------------------------------------------------------ ##

  export REVSHELLS="/usr/local/share/reverse_shells"
  export RS_PATT_NODEJS="${REVSHELLS}/patt_nodeJS.js"
  export RS_REVSHELL_PHP="${REVSHELLS}/php-reverse-shell.php"
  export RS_WEBSHELL="${REVSHELLS}/webshell.php"

## [ IP ADDRESSES ] -------------------------------------------------------- ##

  ipaddr() {

    ## IP addresses will be exported when .egorc is sourced with the function
    ## call, but can also be 'refreshed' when calling ipaddr from the terminal
    ## (ex. after starting a VPN connection).

    ## `host` is provided by the package 'bind'.
    PUBIP="$(host myip.opendns.com resolver1.opendns.com                      \
             | grep --color=never -oP '(?<=myip.opendns.com has address ).*$')"
    export PUBIP

    LANIP="$(ip address | grep --color=never -oP "(?<=inet ).*(?=/.*enp)")"
    export LANIP

    # printf "%s\n" "LAN IP:     ${LANIP}"
    # printf "%s\n" "Public IP:  ${PUBIP}"
  }
  ipaddr

## [ PROMPTS ] ------------------------------------------------------------- ##

  prompt_command() {
      history -a
      dateNOW="$(date "+%F %H:%M:%S %Z")"
      #### tty won't show unicode character #10095.
      if tty | grep pts &>/dev/null; then

          ## ( SIMPLE )
          # export PS1='[\u@\h \W]\$ '
          
          ## ( KALI STYLE )
          # export PS1="\[${COLOR_RESET}\]\[${COLOR_GREEN}\]┌────(\[${COLOR_RESET}\]\u@\h\[${COLOR_GREEN}\])-[\[${COLOR_RESET}\]\w\[${COLOR_GREEN}\]]\n\[${COLOR_GREEN}\]└─$ \[${COLOR_RESET}\]"

          ## ( EGO )
          export PS1="\[${COLOR_RESET}\]\[${COLOR_GREEN}\](\u@\h)-[\[${COLOR_RESET}\]\w\[${COLOR_GREEN}\]] • \[$dateNOW\]\n\[${COLOR_GREEN}\]❯ \[${COLOR_RESET}\]"
      else

          ## ( SIMPLE )
          # export PS1='[\u@\h \W]\$ '
          
          ## ( KALI STYLE )
          # export PS1="\[${COLOR_RESET}\]\[${COLOR_GREEN}\]┌────(\[${COLOR_RESET}\]\u@\h\[${COLOR_GREEN}\])-[\[${COLOR_RESET}\]\w\[${COLOR_GREEN}\]]\n\[${COLOR_GREEN}\]└─$ \[${COLOR_RESET}\]"

          ## ( EGO )
          export PS1="\[${COLOR_RESET}\]\[${COLOR_GREEN}\](\u@\h)-[\[${COLOR_RESET}\]\w\[${COLOR_GREEN}\]] • \[$dateNOW\]\n\[${COLOR_GREEN}\]> \[${COLOR_RESET}\]"
      fi
  }

  PROMPT_COMMAND=prompt_command

## [ GOTO ] ---------------------------------------------------------------- ##

  ## ref. https://threkk.medium.com/how-to-use-bookmarks-in-bash-zsh-6b8074e40774
  ## ref. https://twitter.com/mattn_jp/status/1434192554036137995
  ## Requires `bash-completion` and sourced in .bashrc.
  ## To add a goto link:
  ## $ `ln -s </some/directory/path> ${HOME}/.alterEGO/.goto/@<gotolink>` in  directory.
  ## Usage: `goto @<gotolink>`

  if [ -d "${HOME}/.alterEGO/.goto/" ]; then
    export CDPATH=".:${HOME}/.alterEGO/.goto:/"
    alias goto="cd -P"
    _goto() {
      local IFS=$'\n'
      COMPREPLY=( $(compgen -W "$(/bin/ls ~/.alterEGO/.goto)" -- ${COMP_WORDS[COMP_CWORD]}) )
    } && complete -F _goto goto
  fi

## [ RELOAD ] -------------------------------------------------------------- ##

  reload() {
    if [ $LOADED = 'bashrc' ]; then
      . "${HOME}/.bashrc"
    elif [ $LOADED = 'profile' ]; then
      . "${HOME}/.profile"
    else
      message warning "An error occured while reloading"
    fi
  }

# vim: syntax=sh
# { FIN } __________________________________________________________ ¯\_(ツ)_/¯
