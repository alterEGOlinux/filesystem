#!/usr/bin/env bash

## ----------------------------------------------------------------------------
##             { alterEGO Linux: "Open the vault of knowledge" }             ##
## ----------------------------------------------------------------------------
##
## ~/.ael/.tryhackme
##   created        : 2021-03-07 15:10:11 UTC
##   updated        : 2022-11-23 11:50:13 UTC
##   description    : TryHackMe stuff.
## ____________________________________________________________________________

## [-- MODULES --]

  [ -f ${HOME}/.ael/bash-ael/messages.bash ]                                  \
  && . ${HOME}/.ael/bash-ael/messages.bash

## [-- FUNCTIONS --]

reload() {
  source ${HOME}/.ael/.tryhackme
}

show-config() {
  message title "    VARIABLE         SET TO"
  message result "THM_DIR          ${THM_DIR}"
  message result "THM_CONFIG       ${THM_CONFIG}"
  if [[ ${THM_ROOM_NAME} == "" ]];then
      message alert "THM_ROOM_NAME    Please set room name!"
  else
      message result "THM_ROOM_NAME    ${THM_ROOM_NAME}"
  fi
  if [[ ${THM_ROOM_PATH} == ${THM_DIR}/ ]];then
      message alert "THM_ROOM_PATH    Please set room name!"
  else
      message result "THM_ROOM_PATH    ${THM_ROOM_PATH}"
  fi
  if [[ ${THM_PLAYER} == "" ]];then
      message alert "THM_PLAYER       Please set player name!"
  else
      message result "THM_PLAYER       ${THM_PLAYER}"
  fi
  if [[ ${THM_RHOST} == "" ]];then
      message alert "THM_RHOST        Please set remote IP!"
  else
      message result "THM_RHOST        ${THM_RHOST}"
  fi
  if [[ ${THM_LHOST} == "" ]];then
      message alert "THM_LHOST        Please set local IP!"
  else
      message result "THM_LHOST        ${THM_LHOST}"
  fi
  message result "THM_TOOLS        ${THM_TOOLS}"
}

## [-- INIT --]

  THM_DIR="${HOME}/.ael/tryhackme"
  if [[ ! -d ${THM_DIR} ]]; then
      mkdir ${THM_DIR}
  fi

  THM_TOOLS="${THM_DIR}/tools"
  if [[ ! -d ${THM_TOOLS} ]]; then
      mkdir ${THM_TOOLS}
  fi

  THM_CONFIG="${THM_DIR}/.tryhackme.cfg"
  if [[ ! -e ${THM_CONFIG} ]]; then
      cat <<EOF> ${THM_CONFIG}
## ----------------------------------------------------------------------------
##             { alterEGO Linux: "Open the vault of knowledge" }             ##
## ----------------------------------------------------------------------------
##
## ~/.ael/tryhackme/.tryhackme.cfg
##   created        : 2022-12-02 12:13:16 UTC
##   updated        : 2022-12-02 12:13:16 UTC
##   description    : description
## ____________________________________________________________________________

## [-- MAIN DIRECTORY --]

  THM_DIR="${THM_DIR}"

## [-- CONFIG FILE --]

  THM_CONFIG="${THM_CONFIG}"

## [-- ROOM --]

  THM_ROOM_NAME=""
  THM_ROOM_PATH="${THM_DIR}/${THM_ROOM_NAME}"

## [-- PLAYER --]

  THM_PLAYER=""

## [-- IP ADDRESSES --]

  THM_RHOST=""
  THM_LHOST=""

## [-- TOOLS --]

  THM_TOOLS="${THM_TOOLS}"
  
EOF
  fi

  source ${THM_CONFIG}
  export THM_DIR
  export THM_CONFIG
  export THM_ROOM_NAME
  export THM_ROOM_PATH
  export THM_PLAYER
  export THM_RHOST
  export THM_LHOST
  export THM_TOOLS
  show-config


## [-- COMPLETION --]

  for x in thm .tryhackme; do
    options="\
            connect
            help
            show-config
            login 
            msf
            set-lhost
            set-player
            set-rhost
            set-room
            usage
            webroom" 
    complete -W "${options[@]}" $x
  done

  # _CONFIGDIR="${HOME}/.alterEGO/tryhackme"
  # if [ ! -d ${_CONFIGDIR} ]; then
    # mkdir ${_CONFIGDIR}
  # fi

  # _MAINDIR="${HOME}/.tryhackme"
  # if [ ! -d ${_MAINDIR} ]; then
    # mkdir ${_MAINDIR}
  # fi

  # _CONFIG="${_CONFIGDIR}/.tryhackme.cfg"
  # if [ ! -e ${_CONFIG} ]; then
    # message question "Player name?"
    # _THMPLAYER="${_INPUT}"

    # message question "Room name?"
    # _THMROOM="${_INPUT}"

    # message question "Remote host IP?"
    # _THMRHOST="${_INPUT}"

    # message question "Local host IP?"
    # _THMLHOST="${_INPUT}"

    # cat <<EOF> ${_CONFIG}
# THMPLAYER="${_THMPLAYER}"
# THMROOM="${_THMROOM}"
# THMRHOST="${_THMRHOST}"
# THMLHOST="${_THMLHOST}"
# EOF
  # fi

  # [ -f ${_CONFIG} ]                                                           \
  # && . ${_CONFIG}


## [ FUNCTIONS ] ----------------------------------------------------------- ##

  # set_path() {
    # THMPATH="${_MAINDIR}/${THMROOM}"

    # if [ ! -d ${THMPATH} ]; then
      # mkdir ${THMPATH}
    # fi

    # export THMPATH
  # }

  # set_msf() {

    # ( METASPLOIT )
    # Create msfconsole resource file.
    # This can be loaded using:
    # msf -r ~/.msf4/<resourcefile.rc>
    # Or sourced directly in msf using:
    # `resource thm.rc`

    # if [ ! -d "${HOME}/.msf4" ]; then
      # mkdir ${HOME}/.msf4
    # fi

    # cat << EOF > ~/.msf4/thm.rc
# load alias
# alias setlhost "set LHOST ${THMLHOST}"
# alias setrhost "set RHOSTS ${THMRHOST}"
# EOF
  # }

## [ VARIABLES ] ----------------------------------------------------------- ##

  # export THMPLAYER
  # export THMROOM
  # export THMRHOST
  # export THMLHOST
  # set_path

## [ USAGE ] --------------------------------------------------------------- ##

  # usage() {
    # cat <<EOF
# Usage: attack [option]

# Options:
  # connect
  # login
  # webroom
  # set-player
  # set-room
  # set-lhost
  # set-rhost
  # info
  # msf
  # help/usage

# EOF
  # }

## [ OPTIONS ] ------------------------------------------------------------- ##

  case "${1}" in

    show-config )
      reload
      show-config
      ;;

    # connect )
      # _VPN="${_CONFIGDIR}/${THMPLAYER}.ovpn"
      # if [[ -f ${_VPN} ]]; then
        # sudo openvpn ${_VPN} &
        # cd ${THMPATH}
        # sleep 2
        # $BROWSER "https://www.tryhackme.com/room/${THMROOM}"
      # else
        # $BROWSER "https://tryhackme.com/vpn/get-config"
        # cd ${THMPATH}
      # fi
      # ;;
    # login )
      # $BROWSER "https://www.tryhackme.com/login"
      # ;;
    # webroom )
      # $BROWSER "https://www.tryhackme.com/room/${THMROOM}"
      # ;;
    # set-player )
      # if [[ ${#} == 2 ]]; then
        # shift
        # sed -i -e "s/\(THMPLAYER=\).*/\1'${1}'/g" "${_CONFIG}"
        # export THMPLAYER="${1}"
      # else
        # message warning "Nope"
        # usage
      # fi
      # ;;
    # set-room )
      # if [[ ${#} == 2 ]]; then
        # shift
        # sed -i -e "s/\(THMROOM=\).*/\1'${1}'/g" "${_CONFIG}"
        # export THMROOM="${1}"
        # set_path
        # cd "${THMPATH}"
      # else
        # message warning "Nope"
        # usage
      # fi
      # ;;
    # set-lhost )
      # if [[ ${#} == 2 ]]; then
        # shift
        # sed -i -e "s/\(THMLHOST=\).*/\1'${1}'/g" "${_CONFIG}"
        # export THMRHOST="${1}"
      # else
        # message warning "Nope"
        # usage
      # fi
      # ;;
    # set-rhost )
      # if [[ ${#} == 2 ]]; then
        # shift
        # sed -i -e "s/\(THMLHOST=\).*/\1'${1}'/g" "${_CONFIG}"
        # export THMRHOST="${1}"
      # else
        # message warning "Nope"
        # usage
      # fi
      # ;;
    # info )
      # env | grep --color=never THM
      # ;;
    # msf )
      # set_msf
      # msfconsole -x "db_connect ${USER}@msf" -r ~/.msf4/thm.rc
      # ;;
    # help|usage )
      # usage
      # ;;

  esac

## ----------------------------------------------------------------------------
# vim: foldmethod=marker
# vim: syntax=sh
## ___________________________{ FIN ¯\_(ツ)_/¯ }_______________________________
