#!/usr/bin/env sh
## ----------------------------------------------------------------------- INFO
## [.main]
## author        = "fantomH @alterEGO Linux"
## created       = 2021-03-19 09:37:19 UTC
## updated       = 2023-08-04 02:41:17 UTC
## description   = "alterEGO Linux core shell configuration."

[ -f ${HOME}/.ael/bash-ael/messages.bash ]                                    \
&& . ${HOME}/.ael/bash-ael/messages.bash

[ -f ${HOME}/.ael/bash-ael/colors.bash ]                                      \
&& . ${HOME}/.ael/bash-ael/colors.bash

[ -f ${HOME}/.ael/.functions ]                                                \
&& . ${HOME}/.ael/.functions

[ -f ${HOME}/.ael/.containers ]                                               \
&& . ${HOME}/.ael/.containers

[ -f ${HOME}/.ael/.pkgmanager ]                                               \
&& . ${HOME}/.ael/.pkgmanager

[ -f ${HOME}/.ael/.gits ]                                                     \
&& . ${HOME}/.ael/.gits

[ -f ${HOME}/.ael/.network ]                                                  \
&& . ${HOME}/.ael/.network

[ -f ${HOME}/.ael/.hacker ]                                                   \
&& . ${HOME}/.ael/.hacker

[ -f ${HOME}/.ael/.extra ]                                                    \
&& . ${HOME}/.ael/.extra

## -------------------- [ COLORS ]                                          {{{

export TERM="xterm-256color"

## Set LS_COLORS
[[ -e ${HOME}/.ael/.dircolors ]]                                            \
&& eval "`dircolors --sh ${HOME}/.ael/.dircolors`"

## }}}

## -------------------- [ ALIASES ]                                         {{{

alias grep="grep --color=auto"
alias ll='ls --all --human-readable -l --color=auto'
alias ls='ls --all --color=auto'

## Makes tmux understand the environment is important.
alias tmux="env TERM=screen-256color tmux -u"

alias msfconsole='msfconsole -x "db_connect ${USER}@msf"'
alias open="ael-open"

## TODO: Should we still source automatically. See above.
alias attack="source ${HOME}/.ael/.tryhackme"

## }}}

## -------------------- [ DEFAULT APPLICATIONS ]                            {{{

export BROWSER=firefox
export FZF_DEFAULT_COMMAND='rg --files --hidden '

## TODO: To move from xfce4-terminal to alacritty.
export TERMINAL="xfce4-terminal --hide-scrollbar --hide-menubar --hide-toolbar"
export VISUAL=vim
export EDITOR=${VISUAL}

## }}}

## -------------------- [ PATH ]                                            {{{

## ref. https://www.linuxjournal.com/content/removing-duplicate-path-entries

PATH="${PATH}:${HOME}/scripts:${HOME}/bin"
PATH=$(printf '%s' "${PATH}" | awk -v RS=: '!($0 in a) {a[$0]; printf("%s%s", length(a) > 1 ? ":" : "", $0)}')

export PATH

## }}}

## -------------------- [ HISTORY ]                                         {{{

export HISTIGNORE="cd:clear:delete:exit:gitall:history:ls:mv:nohup:vim"
export HISTCONTROL=ignoreboth:erasedups
export HISTSIZE=1000000
export HISEFILESIZE=1000000

## Uncomment if your want timestamp in history
# export HISTTIMEFORMAT="%Y-%m-%d %T %z "

## }}}

## -------------------- [ MAN IN COLOR ]                                    {{{

## TODO: Need to work on the colors.
export LESS_TERMCAP_mb=$(printf '\e[01;31m') # enter blinking mode – red
export LESS_TERMCAP_md=$(printf '\e[01;35m') # enter double-bright mode – bold, magenta
export LESS_TERMCAP_me=$(printf '\e[0m')     # turn off all appearance modes (mb, md, so, us)
export LESS_TERMCAP_se=$(printf '\e[0m')     # leave standout mode
export LESS_TERMCAP_so=$(printf '\e[01;33m') # enter standout mode – yellow
export LESS_TERMCAP_ue=$(printf '\e[0m')     # leave underline mode
export LESS_TERMCAP_us=$(printf '\e[04;36m') # enter underline mode – cyan

## }}}

## -------------------- [ VIM ]                                             {{{

## Enables CTRL+s in vim.
## ref. https://stackoverflow.com/questions/3446320/in-vim-how-to-map-save-to-ctrl-s
## Requires mapping in .vimrc:
## inoremap <C-s> <ESC>:write<CR>

stty -ixon

## }}}

## -------------------- [ QT5 ]                                             {{{

## ref. https://wiki.manjaro.org/index.php/Set_all_Qt_app%27s_to_use_GTK%2B_font_%26_theme_settings
## Set all Qt app's to use GTK+ font & theme settings
## Overview
## When using a Desktop Environment or Window Manager that doesn't allow for the settings of QT themes,
## you can set QT to use your GTK themes instead.
## Using qt5ct
## note: In some Manjaro editions, this is already done for you by default
## Install qt5ct using your favorite package manager or the command:
## pamac install qt5ct
## Set environment variables in ~/.profile by adding or updating the following lines:
## export QT_QPA_PLATFORMTHEME="qt5ct"
## Run the application QT5 Configuration Manager from the menu or run the command qt5ct.
## Logout and login again to make the change effective

# export QT_QPA_PLATFORMTHEME="qt5ct"

## }}}

## -------------------- [ IP ADDRESSES ]                                    {{{
ipaddr() {

  ## IP addresses will be exported when .egorc is sourced with the function
  ## call, but can also be 'refreshed' when calling ipaddr from the terminal
  ## (ex. after starting a VPN connection).

  ## `host` is provided by the package 'bind'.
  PUBIP="$(host myip.opendns.com resolver1.opendns.com                      \
            | grep --color=never -oP '(?<=myip.opendns.com has address ).*$')"
  export PUBIP

  ## TODO: Not working properly if not wired.
  LANIP="$(ip address | grep --color=never -oP "(?<=inet ).*(?=/.*enp)")"
  export LANIP

  # printf "%s\n" "LAN IP:     ${LANIP}"
  # printf "%s\n" "Public IP:  ${PUBIP}"
  }
  ipaddr
  ## }}}

## -------------------- [ PROMPTS ]                                         {{{
prompt_command() {
    history -a
    dateNOW="$(date "+%F %H:%M:%S %Z")"

    ## tty won't show unicode character #10095.
    if tty | grep pts &>/dev/null; then

        ## (* SIMPLE *)
        # export PS1='[\u@\h \W]\$ '
        
        ## (* KALI STYLE *)
        # export PS1="\[${RESET}\]\[${GREEN}\]┌────(\[${RESET}\]\u@\h\[${GREEN}\])-[\[${RESET}\]\w\[${GREEN}\]]\n\[${GREEN}\]└─$ \[${RESET}\]"

        ## (* EGO *)
        export PS1="\[${RESET}\]\[${GREEN}\](\u@\h)-[\[${RESET}\]\w\[${GREEN}\]] • \[$dateNOW\]\n\[${GREEN}\]❯ \[${RESET}\]"

    else
        ## (* SIMPLE *)
        # export PS1='[\u@\h \W]\$ '
        
        ## (* KALI STYLE *)
        # export PS1="\[${RESET}\]\[${GREEN}\]┌────(\[${RESET}\]\u@\h\[${GREEN}\])-[\[${RESET}\]\w\[${GREEN}\]]\n\[${GREEN}\]└─$ \[${RESET}\]"

        ## (* EGO *)
        export PS1="\[${RESET}\]\[${GREEN}\](\u@\h)-[\[${RESET}\]\w\[${GREEN}\]] • \[$dateNOW\]\n\[${GREEN}\]> \[${RESET}\]"
    fi
  }
  PROMPT_COMMAND=prompt_command
  ## }}}

## -------------------- [ GOTO ]                                            {{{
## ref. https://threkk.medium.com/how-to-use-bookmarks-in-bash-zsh-6b8074e40774
## ref. https://twitter.com/mattn_jp/status/1434192554036137995
## Requires `bash-completion` and sourced in .bashrc.
## To add a goto link:
## $ `ln -s </some/directory/path> ${HOME}/.ael/.goto/@<gotolink>` in  directory.
## Usage: `goto @<gotolink>`

if [ -d "${HOME}/.ael/.goto/" ]; then
  export CDPATH=".:${HOME}/.ael/.goto:/"
  alias goto="cd -P"
  _goto() {
    local IFS=$'\n'
    COMPREPLY=( $(compgen -W "$(/bin/ls ~/.ael/.goto)" -- ${COMP_WORDS[COMP_CWORD]}) )
  } && complete -F _goto goto
fi
## }}}

## -------------------- [ RELOAD ]                                          {{{
reload() {
  if [ $LOADED = 'bashrc' ]; then
    . "${HOME}/.bashrc"
  elif [ $LOADED = 'profile' ]; then
    . "${HOME}/.profile"
  else
    message error "An error occured while reloading"
  fi
  }
  ## }}}

# vim: syntax=sh
# vim: foldmethod=marker
## ------------------------------------------------------------- FIN ¯\_(ツ)_/¯
