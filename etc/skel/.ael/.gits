#! /usr/bin/env sh
# -----------------------------------------------------------------------------
#              { alterEGO Linux: "Open the vault of knowledge" }
# -----------------------------------------------------------------------------
#
# ~/.ael/.gits
#   created        : 2022-10-18 22:14:48 UTC
#   updated        : 2023-03-06 15:14:02 UTC
#   description    : Shell stuff for git.
# _____________________________________________________________________________

# [* MODULES *]

  [ -f ${HOME}/.ael/bash-ael/messages.bash ]                                  \
  && . ${HOME}/.ael/bash-ael/messages.bash

gitall() {
    #... Fast update of git repo.

    git pull && git add . && git commit && git push
  }

git_status() {
    #... Get status of local git repository.
    #... ref. https://gist.github.com/giggio/1704664

    dumpfile="/tmp/git-status.dump"

    if [ -z ${1} ]; then
      local_git_repository=$(find ${HOME} -name ".git" -type d | grep -v /.cache/ | sed 's/.git//' | fzf)
    else
      local_git_repository=${1}
    fi
    
    cd ${local_git_repository}
    git fetch
    git status > ${dumpfile}

    message action "Checking local repository status for\n    ${local_git_repository}"

    untracked=$(grep "Untracked files" ${dumpfile});
    unstaged=$(grep "Changes not staged for commit" ${dumpfile});
    to_commit=$(grep "Changes to be committed" ${dumpfile});
    is_ahead=$(grep "Your branch is ahead of" ${dumpfile});
    is_behind=$(grep "Your branch is behind" ${dumpfile});

    if [[ -n "${untracked}" ]]; then
      message result "ADD Files to add to repo."
    elif [[ -n ${unstaged} ]]; then
      message result "ADD Files to be staged."
    elif [[ -n "${to_commit}" ]]; then
      message result "COMMIT Files to commit."
    elif [[ -n "${is_ahead}" ]]; then
      message result "PUSH Time to push."
    elif [[ -n "${is_behind}" ]]; then
      message result "PULL Time to pull."
    else
      message result "STAY Nothing to do."
    fi
  }
  alias git-status='git_status'

# [* lazygit *]
lazygit() {
    #... The variable lazygit_repositories is defined in ~/.ael/.extra

    if [[ ! -e "${lazygit_repositories}" ]]; then
        message warning "Please define `lazygit_repositories` in `~/.ael/.extra`."
    fi

    _cwd="$(pwd)"
    cd ${HOME}
    for repo in "${lazygit_repositories[@]}"; do
        message action "Updating $repo"
        cd "$repo"
        git pull                                                              \
        && git add .                                                          \
        && git commit -m "Updated using lazygit..."                           \
        && git push
        cd ${HOME}
    done
    cd "$_cwd"
  }

# -----------------------------------------------------------------------------
# vim: foldmethod=marker
# vim: syntax=sh
# ____________________________{ FIN ¯\_(ツ)_/¯ }_______________________________
